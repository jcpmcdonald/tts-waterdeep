--

-- Gets all unlocked objects in the given zone
function getUnlockedIn(zone)
  local all = nil
  if type(zone) == "string" then
    all = getObjectFromGUID(zone).getObjects()
  else
    all = zone.getObjects()
  end
  
  local unlocked = {}
  
  -- Loop through all objects, and only add the unlocked ones to the return value
  for k, object in pairs(all) do
    if not object.getLock() then
      table.insert(unlocked, object)
    end
  end
  
  return unlocked
end

function isUnlockedNearby(position, dist)
  local posVector = Vector.new(position.x, 0, position.z)
  local all = getAllObjects()
  for k, obj in pairs(all) do
    local objPos = obj.getPosition()
    objPos:setAt('y', 0)
    if objPos:distance(posVector) < (dist or 0.5) then
      return true
    end
  end
  return false
end

function isUnlockedNearbySmart(position, scale)
  zoneSpawn = {
    position = position,
    scale = scale,
    type = 'ScriptingTrigger',
    rotation = {0, 0, 0}
  }
  zone = spawnObject(zoneSpawn)
  
  hasGuid = function() return zone.guid != '' end
  Wait.condition(|| print(# zone.getObjects()), hasGuid)
  print("Immediate: " .. # zone.getObjects())
end

function getUnlockedInSet(set)
  local unlocked = {}
  for k, objId in pairs(set) do
    local obj = getObjectFromGUID(objId)
    if obj and obj.getLock() == false then
      table.insert(unlocked, obj)
    end
  end
  return unlocked
end
